
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\x18\xc3\x90*\x02c\xb9\xfa\x87p_\x0ekL^\x07'
    
_lr_action_items = {'LANGLE':([1,3,5,10,18,19,23,25,28,],[-12,-14,11,11,11,11,-7,-8,11,]),'NAME':([0,4,7,11,12,20,22,24,],[1,1,1,1,1,1,1,1,]),'WITHBRACKET':([1,2,3,5,8,10,13,19,23,25,],[-12,7,-14,-6,-3,-4,-5,-9,-7,-8,]),'EQUALS':([1,3,5,8,10,13,15,19,23,25,],[-12,-14,-6,-3,-4,-5,20,-9,-7,-8,]),'COMMA':([1,3,5,8,10,13,14,16,17,18,19,23,25,26,27,28,],[-12,-14,-6,-3,-4,-5,-16,22,24,-11,-9,-7,-8,-18,-17,-10,]),'ATOMIC':([0,4,7,11,12,20,22,24,],[3,3,3,3,3,3,3,3,]),'SCOPE':([1,3,5,10,18,19,23,25,28,],[-12,-14,12,12,12,-9,-7,-8,12,]),'RANGLE':([1,3,17,18,19,23,25,28,],[-12,-14,23,-11,-9,-7,-8,-10,]),'RBRACKET':([1,3,5,8,10,13,14,16,19,23,25,26,27,],[-12,-14,-6,-3,-4,-5,-16,21,-9,-7,-8,-18,-17,]),'MODIFIER':([0,1,2,3,5,7,8,10,13,15,19,20,22,23,25,26,],[4,-12,8,-14,13,4,-3,-4,-5,8,-9,4,4,-7,-8,8,]),'$end':([1,2,3,5,6,8,9,10,13,19,21,23,25,],[-12,-1,-14,-6,0,-3,-2,-4,-5,-9,-15,-7,-8,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'equality':([7,22,],[14,27,]),'typelist':([11,],[17,]),'type':([0,4,7,11,12,20,22,24,],[5,10,5,18,19,5,5,28,]),'qualified':([0,7,20,22,],[2,15,26,15,]),'equalitylist':([7,],[16,]),'with':([2,],[9,]),'blurb':([0,],[6,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> blurb","S'",1,None,None,None),
  ('blurb -> qualified','blurb',1,'p_blurb_qualified','tokenize.py',79),
  ('blurb -> qualified with','blurb',2,'p_blurb_equality','tokenize.py',84),
  ('qualified -> qualified MODIFIER','qualified',2,'p_qualified_qualified','tokenize.py',91),
  ('qualified -> MODIFIER type','qualified',2,'p_qualified_modifier','tokenize.py',97),
  ('qualified -> type MODIFIER','qualified',2,'p_qualified_modifierafter','tokenize.py',104),
  ('qualified -> type','qualified',1,'p_qualified_type','tokenize.py',112),
  ('type -> type LANGLE typelist RANGLE','type',4,'p_type_angle_list','tokenize.py',117),
  ('type -> type LANGLE type RANGLE','type',4,'p_type_angle','tokenize.py',123),
  ('type -> type SCOPE type','type',3,'p_type_scope','tokenize.py',130),
  ('typelist -> typelist COMMA type','typelist',3,'p_typelist_comma','tokenize.py',137),
  ('typelist -> type','typelist',1,'p_typelist_type','tokenize.py',142),
  ('type -> NAME','type',1,'p_type_name','tokenize.py',147),
  ('operator -> OPERATOR LPAREN RPAREN','operator',3,'p_operator_func','tokenize.py',154),
  ('type -> ATOMIC','type',1,'p_type_atomic','tokenize.py',160),
  ('with -> WITHBRACKET equalitylist RBRACKET','with',3,'p_with_equality','tokenize.py',170),
  ('equalitylist -> equality','equalitylist',1,'p_equalitylist_equality','tokenize.py',175),
  ('equalitylist -> equalitylist COMMA equality','equalitylist',3,'p_equalitylist_comma','tokenize.py',180),
  ('equality -> qualified EQUALS qualified','equality',3,'p_equality_equals','tokenize.py',185),
]
